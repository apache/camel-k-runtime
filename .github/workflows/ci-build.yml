#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Build

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.adoc'
      - 'KEYS'
      - 'LICENSE'
      - 'NOTICE'
      - 'Jenkinsfile'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.adoc'
      - 'KEYS'
      - 'LICENSE'
      - 'NOTICE'
      - 'Jenkinsfile'
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: -Xmx3000m
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: AdoptOpenJDK/install-jdk@v1
      with:
        version: '11'
    - name: Build camel (master)
      if: contains( github.event.pull_request.labels.*.name, 'depends-on/camel/master')
      run: |
        git clone --depth 1 --branch master https://github.com/apache/camel.git \
          && cd camel \
          && echo "Current Camel commit:" $(git rev-parse HEAD) \
          && ./mvnw -V -B -ntp clean install \
            -Dfastinstall
        git clone --depth 1 --branch camel-master https://github.com/apache/camel-quarkus.git \
          && cd camel-quarkus \
          && echo "Current Camel Quarkus commit:" $(git rev-parse HEAD) \
          && ./mvnw -V -B -ntp clean install \
            -Dformatter.skip \
            -Dimpsort.skip \
            -Denforce=false \
            -Dcamel-quarkus.update-extension-doc-page.skip \
            -DskipTests \
            -DskipITs
    - name: Build camel-quarkus (master)
      if: contains( github.event.pull_request.labels.*.name, 'depends-on/quarkus/master')
      run: |
        git clone --depth 1 --branch master https://github.com/apache/camel-quarkus.git \
          && cd camel-quarkus \
          && echo "Current Camel Quarkus commit:" $(git rev-parse HEAD) \
          && ./mvnw -V -B -ntp clean install \
            -Dformatter.skip \
            -Dimpsort.skip \
            -Denforce=false \
            -Dcamel-quarkus.update-extension-doc-page.skip \
            -DskipTests \
            -DskipITs
    - name: Build camel-k-runtime
      run: ./mvnw -V -B -ntp clean install
    - name: Tar Maven Repo
      shell: bash
      run: tar -czf maven-repo-${{ github.run_id }}-${{ github.run_number }}.tgz -C ~ .m2/repository
    - name: Persist Maven Repo
      uses: actions/upload-artifact@v1
      with:
        name: maven-repo-${{ github.run_id }}-${{ github.run_number }}
        path: maven-repo-${{ github.run_id }}-${{ github.run_number }}.tgz
  build-additional-jvm:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java:
          - '14'
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK - ${{ matrix.java }}
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version:  ${{ matrix.java }}
      - name: Build on ${{ matrix.java }}
        if: contains( github.event.pull_request.labels.*.name, 'depends-on/camel/master') == 'false' && contains( github.event.pull_request.labels.*.name, 'depends-on/quarkus/master') == 'false'
        run: |
          ./mvnw -V -B -ntp clean install
  build-native:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        native-image-project:
          - :camel-k-quarkus-itests-core
          - :camel-k-quarkus-itests-cron
          - :camel-k-quarkus-itests-kamelet
          - :camel-k-quarkus-itests-knative
          - :camel-k-quarkus-itests-loader-xml
          - :camel-k-quarkus-itests-loader-yaml
          - :camel-k-quarkus-itests-polyglot
          - :camel-k-runtime-example-quarkus-xml
          - :camel-k-runtime-example-quarkus-yaml
          - :camel-k-runtime-example-quarkus-knative
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: AdoptOpenJDK/install-jdk@v1
        with:
          version: '11'
      - name: Download Maven Repo
        uses: actions/download-artifact@v1
        with:
          name: maven-repo-${{ github.run_id }}-${{ github.run_number }}
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo-${{ github.run_id }}-${{ github.run_number }}.tgz -C ~
      - name: Integration Test - ${{ matrix.native-image-project }}
        run: |
          ./mvnw -V -B -ntp -nsu clean install \
            -Dnative \
            -Dnative-image.xmx=6g \
            -Ddocker \
            -pl ${{ matrix.native-image-project }}

#
# JS build disabled as fails for OOM
# relates to: https://github.com/oracle/graal/issues/2129
#

