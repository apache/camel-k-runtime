#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

- route:
    id: "rest"
    group: "routes"
    rest:
      verb: "post"
      uri: "/api/route"
      accepts: "text/plain"
      binding-mode: "off"
      steps:
        - convert-body-to:
            type: "java.lang.String"
        - to:
            uri: "log:in"
        - choice:
            when:
              - simple: "${body.contains(\",\")}"
                steps:
                  - split:
                      tokenize: ","
                      steps:
                        - set-body:
                            simple: "${body.toUpperCase()}"
                        - to:
                            uri: "log:contains-1"
              - simple: "${body.contains(\";\")}"
                steps:
                  - split:
                      tokenize: ";"
                      steps:
                        - set-body:
                            simple: "${body.toLowerCase()}"
                        - to:
                            uri: "log:contains2"
        - marshal:
            json: {}
        - convert-body-to:
            type: "java.lang.String"
        - to:
            uri: "log:out"
- route:
    id: "flow"
    group: "routes"
    rest:
      verb: "post"
      uri: "/api/flow"
      accepts: "text/plain"
      binding-mode: "off"
      steps:
        - convert-body-to:
            type: "java.lang.String"
        - to:
            uri: "log:in"
        - filter:
            simple: "${body.contains(\",\")}"
        - split:
            tokenize: ";"
        - set-body:
            simple: "${body.toLowerCase()}"
        - to:
            uri: "log:out"
- route:
    id: "rest+flow"
    group: "routes"
    rest:
      verb: "post"
      uri: "/api/floute"
      accepts: "text/plain"
      binding-mode: "off"
      steps:
        - convert-body-to:
            type: "java.lang.String"
        - to:
            uri: "log:in"
        - choice:
            when:
              - simple: "${body.contains(\",\")}"
                steps:
                  - split:
                      tokenize: ","
                  - set-body:
                      simple: "${body.toUpperCase()}"
                  - to:
                      uri: "log:contains-1"
              - simple: "${body.contains(\";\")}"
                steps:
                  - split:
                      tokenize: ";"
                  - set-body:
                      simple: "${body.toLowerCase()}"
                  - to:
                      uri: "log:contains2"
- route:
    id: "tick"
    group: "routes"
    from:
      uri: "timer:tick"
      parameters:
        period: "5000"
      steps:
        - set-body:
            simple: "${exchangeProperty.CamelTimerName} -> ${exchangeProperty.CamelTimerCounter}"
        - to:
            uri: "log:tick"
        - log:
            message: "{{message}}"