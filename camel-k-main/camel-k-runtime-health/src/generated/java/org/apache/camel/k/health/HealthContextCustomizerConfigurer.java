/* Generated by camel build tools - do NOT edit this file! */
package org.apache.camel.k.health;

import java.util.Map;

import org.apache.camel.CamelContext;
import org.apache.camel.spi.GeneratedPropertyConfigurer;
import org.apache.camel.spi.PropertyConfigurerGetter;
import org.apache.camel.util.CaseInsensitiveMap;
import org.apache.camel.k.health.HealthContextCustomizer;

/**
 * Generated by camel build tools - do NOT edit this file!
 */
@SuppressWarnings("unchecked")
public class HealthContextCustomizerConfigurer extends org.apache.camel.support.component.PropertyConfigurerSupport implements GeneratedPropertyConfigurer, PropertyConfigurerGetter {

    private static final Map<String, Object> ALL_OPTIONS;
    static {
        Map<String, Object> map = new CaseInsensitiveMap();
        map.put("HealthGroupFilterExclude", java.lang.String.class);
        map.put("IncludeContext", boolean.class);
        map.put("IncludeRoutes", boolean.class);
        map.put("Path", java.lang.String.class);
        ALL_OPTIONS = map;
    }

    @Override
    public boolean configure(CamelContext camelContext, Object obj, String name, Object value, boolean ignoreCase) {
        org.apache.camel.k.health.HealthContextCustomizer target = (org.apache.camel.k.health.HealthContextCustomizer) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "healthgroupfilterexclude":
        case "HealthGroupFilterExclude": target.setHealthGroupFilterExclude(property(camelContext, java.lang.String.class, value)); return true;
        case "includecontext":
        case "IncludeContext": target.setIncludeContext(property(camelContext, boolean.class, value)); return true;
        case "includeroutes":
        case "IncludeRoutes": target.setIncludeRoutes(property(camelContext, boolean.class, value)); return true;
        case "path":
        case "Path": target.setPath(property(camelContext, java.lang.String.class, value)); return true;
        default: return false;
        }
    }

    @Override
    public Map<String, Object> getAllOptions(Object target) {
        return ALL_OPTIONS;
    }

    @Override
    public Object getOptionValue(Object obj, String name, boolean ignoreCase) {
        org.apache.camel.k.health.HealthContextCustomizer target = (org.apache.camel.k.health.HealthContextCustomizer) obj;
        switch (ignoreCase ? name.toLowerCase() : name) {
        case "healthgroupfilterexclude":
        case "HealthGroupFilterExclude": return target.getHealthGroupFilterExclude();
        case "includecontext":
        case "IncludeContext": return target.isIncludeContext();
        case "includeroutes":
        case "IncludeRoutes": return target.isIncludeRoutes();
        case "path":
        case "Path": return target.getPath();
        default: return null;
        }
    }
}

